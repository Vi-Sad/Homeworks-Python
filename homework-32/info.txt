Игра «Защити свой замок».

Требования к проекту:
Функциональные требования:
1. Создание замка со стартовой прочностью 100 и довольством людей -100.
2. Генерация случайных событий, негативно влияющих на замок, через случайный промежуток времени.
3. Возможность пользователя выбирать контратаку для защиты замка.
4. Контратаки включают: восстановление прочности и довольства, восстановление прочности и атака противника.
5. Ограничение на использование определенных контратак: "Пусть пожалуйста все будет как раньше" можно использовать только один раз за игру, другие контратаки с ограниченным интервалом времени.
6. Ограничение на максимальное значение прочности и довольства (максимум 100).
7. Завершение игры, если прочность или довольство людей упадут до 0 или меньше.

Нефункциональные требования:
1. Устойчивость и надежность программы, минимум ошибок и сбоев в работе.
2. Интерфейс должен быть интуитивно понятным и легким для использования.
3. Программа должна обеспечивать разнообразие случайных событий, чтобы игра была интересной и непредсказуемой.
4. Время реакции на события и контратаки должно быть приемлемым для пользователя.

Рекомендации по реализации классов:
Классы:
1. Класс Castle: Отвечает за создание и управление замком. Включает методы для изменения прочности и довольства замка, а также обработки случайных событий и контратак пользователя.
2. Класс EventGenerator: Генерирует случайные события, которые могут произойти с замком. Включает методы для создания различных событий (нападение крыс, нападение другого замка, нападение варваров с чумой) и определения их воздействия на замок.
3. Класс Counterattack: Отвечает за реализацию контратак. Включает методы для восстановления прочности и довольства замка или проведения контратаки против противника.

Примечание: проект сделали 4 человека, командная работа
